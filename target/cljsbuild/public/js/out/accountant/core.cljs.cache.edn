{:rename-macros {}, :renames {}, :externs {Object {}, document {title {}}, window {location {hostname {}, pathname {}, search {}, hash {}}}, Error {}, console {error {}}}, :use-macros {go cljs.core.async.macros}, :excludes #{}, :name accountant.core, :imports {Event goog.history.Event, Html5History goog.history.Html5History, Uri goog.Uri}, :requires {Uri goog.Uri, Html5History goog.history.Html5History, EventType goog.history.EventType, goog.history.EventType goog.history.EventType, cljs.core.async cljs.core.async, events goog.events, Event goog.history.Event, str clojure.string, clojure.string clojure.string, goog.events goog.events}, :uses {<! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {nav-handler {:name accountant.core/nav-handler, :file "target/cljsbuild/public/js/out/accountant/core.cljs", :line 89, :column 1, :end-line 89, :end-column 21, :meta {:file "/Users/jenniferparsons/Sites/todo/target/cljsbuild/public/js/out/accountant/core.cljs", :line 89, :column 10, :end-line 89, :end-column 21}, :tag clj-nil}, uri->fragment {:protocol-inline nil, :meta {:file "/Users/jenniferparsons/Sites/todo/target/cljsbuild/public/js/out/accountant/core.cljs", :line 57, :column 8, :end-line 57, :end-column 21, :private true, :arglists (quote ([uri]))}, :private true, :name accountant.core/uri->fragment, :variadic false, :file "target/cljsbuild/public/js/out/accountant/core.cljs", :end-column 21, :method-params ([uri]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uri]))}, map->params {:protocol-inline nil, :meta {:file "/Users/jenniferparsons/Sites/todo/target/cljsbuild/public/js/out/accountant/core.cljs", :line 109, :column 7, :end-line 109, :end-column 18, :arglists (quote ([query]))}, :name accountant.core/map->params, :variadic false, :file "target/cljsbuild/public/js/out/accountant/core.cljs", :end-column 18, :method-params ([query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query]))}, path-exists? {:name accountant.core/path-exists?, :file "target/cljsbuild/public/js/out/accountant/core.cljs", :line 90, :column 1, :end-line 90, :end-column 22, :meta {:file "/Users/jenniferparsons/Sites/todo/target/cljsbuild/public/js/out/accountant/core.cljs", :line 90, :column 10, :end-line 90, :end-column 22}, :tag clj-nil}, get-url {:protocol-inline nil, :meta {:file "/Users/jenniferparsons/Sites/todo/target/cljsbuild/public/js/out/accountant/core.cljs", :line 37, :column 8, :end-line 37, :end-column 15, :private true, :arglists (quote ([history token])), :doc "Gets the URL for a history token, but without preserving the query string\n  as Google's version incorrectly does. (See https://goo.gl/xwgUos)"}, :private true, :name accountant.core/get-url, :variadic false, :file "target/cljsbuild/public/js/out/accountant/core.cljs", :end-column 15, :method-params ([history token]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([history token])), :doc "Gets the URL for a history token, but without preserving the query string\n  as Google's version incorrectly does. (See https://goo.gl/xwgUos)"}, uri->query {:protocol-inline nil, :meta {:file "/Users/jenniferparsons/Sites/todo/target/cljsbuild/public/js/out/accountant/core.cljs", :line 52, :column 8, :end-line 52, :end-column 18, :private true, :arglists (quote ([uri]))}, :private true, :name accountant.core/uri->query, :variadic false, :file "target/cljsbuild/public/js/out/accountant/core.cljs", :end-column 18, :method-params ([uri]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uri]))}, history {:name accountant.core/history, :file "target/cljsbuild/public/js/out/accountant/core.cljs", :line 12, :column 1, :end-line 12, :end-column 17, :meta {:file "/Users/jenniferparsons/Sites/todo/target/cljsbuild/public/js/out/accountant/core.cljs", :line 12, :column 10, :end-line 12, :end-column 17}, :tag goog/history.Html5History}, navigate! {:protocol-inline nil, :meta {:file "/Users/jenniferparsons/Sites/todo/target/cljsbuild/public/js/out/accountant/core.cljs", :line 115, :column 7, :end-line 115, :end-column 16, :arglists (quote ([route] [route query])), :doc "add a browser history entry. updates window/location", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([route] [route query]), :arglists ([route] [route query]), :arglists-meta (nil nil)}}, :name accountant.core/navigate!, :variadic false, :file "target/cljsbuild/public/js/out/accountant/core.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([route] [route query]), :arglists ([route] [route query]), :arglists-meta (nil nil)}, :method-params ([route] [route query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists ([route] [route query]), :doc "add a browser history entry. updates window/location"}, prevent-reload-on-known-path {:protocol-inline nil, :meta {:file "/Users/jenniferparsons/Sites/todo/target/cljsbuild/public/js/out/accountant/core.cljs", :line 62, :column 8, :end-line 62, :end-column 36, :private true, :arglists (quote ([history path-exists?])), :doc "Create a click handler that blocks page reloads for known routes"}, :private true, :name accountant.core/prevent-reload-on-known-path, :variadic false, :file "target/cljsbuild/public/js/out/accountant/core.cljs", :end-column 36, :method-params ([history path-exists?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([history path-exists?])), :doc "Create a click handler that blocks page reloads for known routes"}, listen {:protocol-inline nil, :meta {:file "/Users/jenniferparsons/Sites/todo/target/cljsbuild/public/js/out/accountant/core.cljs", :line 14, :column 8, :end-line 14, :end-column 14, :private true, :arglists (quote ([el type]))}, :private true, :name accountant.core/listen, :variadic false, :file "target/cljsbuild/public/js/out/accountant/core.cljs", :end-column 14, :method-params ([el type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([el type]))}, find-href {:protocol-inline nil, :meta {:file "/Users/jenniferparsons/Sites/todo/target/cljsbuild/public/js/out/accountant/core.cljs", :line 28, :column 8, :end-line 28, :end-column 17, :private true, :arglists (quote ([e])), :doc "Given a DOM element that may or may not be a link, traverse up the DOM tree\n  to see if any of its parents are links. If so, return the href content."}, :private true, :name accountant.core/find-href, :variadic false, :file "target/cljsbuild/public/js/out/accountant/core.cljs", :end-column 17, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e])), :doc "Given a DOM element that may or may not be a link, traverse up the DOM tree\n  to see if any of its parents are links. If so, return the href content."}, dispatch-on-navigate {:protocol-inline nil, :meta {:file "/Users/jenniferparsons/Sites/todo/target/cljsbuild/public/js/out/accountant/core.cljs", :line 20, :column 8, :end-line 20, :end-column 28, :private true, :arglists (quote ([history nav-handler]))}, :private true, :name accountant.core/dispatch-on-navigate, :variadic false, :file "target/cljsbuild/public/js/out/accountant/core.cljs", :end-column 28, :method-params ([history nav-handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([history nav-handler]))}, set-token! {:protocol-inline nil, :meta {:file "/Users/jenniferparsons/Sites/todo/target/cljsbuild/public/js/out/accountant/core.cljs", :line 43, :column 8, :end-line 43, :end-column 18, :private true, :arglists (quote ([history token title])), :doc "Sets a history token, but without preserving the query string as Google's\n  version incorrectly does. (See https://goo.gl/xwgUos)"}, :private true, :name accountant.core/set-token!, :variadic false, :file "target/cljsbuild/public/js/out/accountant/core.cljs", :end-column 18, :method-params ([history token title]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 3, :fn-var true, :arglists (quote ([history token title])), :doc "Sets a history token, but without preserving the query string as Google's\n  version incorrectly does. (See https://goo.gl/xwgUos)"}, dispatch-current! {:protocol-inline nil, :meta {:file "/Users/jenniferparsons/Sites/todo/target/cljsbuild/public/js/out/accountant/core.cljs", :line 134, :column 7, :end-line 134, :end-column 24, :arglists (quote ([]))}, :name accountant.core/dispatch-current!, :variadic false, :file "target/cljsbuild/public/js/out/accountant/core.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, configure-navigation! {:protocol-inline nil, :meta {:file "/Users/jenniferparsons/Sites/todo/target/cljsbuild/public/js/out/accountant/core.cljs", :line 92, :column 7, :end-line 92, :end-column 28, :arglists (quote ([{:keys [nav-handler path-exists?]}])), :doc "Create and configure HTML5 history navigation.\n\n  nav-handler: a fn of one argument, a path. Called when we've decided\n  to navigate to another page. You'll want to make your app draw the\n  new page here.\n\n  path-exists?: a fn of one argument, a path. Return truthy if this path is handled by the SPA"}, :name accountant.core/configure-navigation!, :variadic false, :file "target/cljsbuild/public/js/out/accountant/core.cljs", :end-column 28, :method-params ([p__36253]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [nav-handler path-exists?]}])), :doc "Create and configure HTML5 history navigation.\n\n  nav-handler: a fn of one argument, a path. Called when we've decided\n  to navigate to another page. You'll want to make your app draw the\n  new page here.\n\n  path-exists?: a fn of one argument, a path. Return truthy if this path is handled by the SPA"}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:path-exists? :else :recur :nav-handler}, :order [:recur :else :nav-handler :path-exists?]}, :doc "The only namespace in this library."}